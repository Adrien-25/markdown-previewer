import React, { useState } from "react";
import { marked } from "marked";
import "../App.css";

const MarkdownPreviewer = () => {
  // Default Markdown for initial load (meets User Story #5)
  const defaultMarkdown = `
  # Bienvenue dans ce Guide Complet de Markdown ! ðŸš€
  
  ## Un tour d'horizon complet de toutes les fonctionnalitÃ©s :
  
  Markdown est **incroyablement** pratique pour formater du texte de maniÃ¨re simple et rapide. Avec quelques symboles, vous pouvez :
  
  - Structurer vos documents,
  - CrÃ©er des liens [comme celui-ci](https://fr.wikipedia.org/wiki/Markdown),
  - Ajouter des images,
  - Et mÃªme Ã©crire du code !
  
  ### C'est parti pour un tour de magie Markdown !
  
  ---
  
  ## Styles de texte basiques
  
  Voici quelques options pour styliser le texteÂ :
  
  - **Texte en gras** avec deux astÃ©risques \`**\` : **C'est du texte en gras !**
  - _Texte en italique_ avec un seul astÃ©risque \`_\` : _C'est en italique, trÃ¨s classe._
  - ~~Texte barrÃ©~~ avec deux tildes \`~~\` : ~~Quand on veut barrer du texte !~~
  
  Vous pouvez mÃªme **combiner les styles**Â : du texte Ã  la fois **_gras et italique_** !
  
  
  ---
  
  ## Citations
  
  Les citations en Markdown sont Ã©galement super simples. Il suffit de commencer par \`>\` pour crÃ©er un bloc de citationÂ :
  
  > "La simplicitÃ© est la sophistication suprÃªme."  
  > â€” LÃ©onard de Vinci (ou peut-Ãªtre quelquâ€™un dâ€™autreâ€¦)
  
  ---
  
  ## Code Inline et Blocs de Code
  
  Vous pouvez insÃ©rer du \`code inline\` comme ceci, avec un accent grave.
  
  Et pour des blocs de code multi-lignesÂ :
  
  \`\`\`javascript
  // Un exemple de code JavaScript :
  function direBonjour(nom) {
    return \`Bonjour, \${nom} !\`;
  }
  
  console.log(direBonjour("le monde"));
  \`\`\`
  
  Le Markdown permet de spÃ©cifier le langage du code pour la coloration syntaxique.
  
  ---
  
  ## Listes
  
  Les listes non ordonnÃ©es sont simplesÂ :
  - Voici un Ã©lÃ©ment
  - Un autre Ã©lÃ©ment
     - Et un sous-Ã©lÃ©ment pour varier
  - On peut aussi ajouter autant d'Ã©lÃ©ments qu'on veut
  
  Les listes ordonnÃ©esÂ :
  1. Premier Ã©lÃ©ment
  2. DeuxiÃ¨me Ã©lÃ©ment
  3. TroisiÃ¨me Ã©lÃ©ment
     1. Sous-Ã©lÃ©ment pour le troisiÃ¨me
  
  ---
  
  ## Tableaux
  
  Les tableaux sont parfaits pour structurer des informationsÂ :
  
  | Nom       | Ã‚ge | Ville          |
  |-----------|-----|----------------|
  | Alice     | 25  | Paris          |
  | Bob       | 30  | Lyon           |
  | Charly    | 35  | Marseille      |
  
  Et on peut aussi aligner le texte dans les colonnes avec des \`:\` :
  | AlignÃ© Ã  gauche | CentrÃ©       | AlignÃ© Ã  droite |
  |:--------------- |:------------:| ---------------:|
  | Texte Ã  gauche  | Texte centrÃ© | Texte Ã  droite  |
  
  ---
  
  ## Images
  
  Pour intÃ©grer une image, c'est aussi facile que les liensÂ :
  
  ![Chat mignon](https://placekitten.com/200/200)
  
  ---
  
  ## SÃ©parateurs de section
  
  On peut ajouter des sÃ©parateurs de section avec trois tirets (ou astÃ©risques)Â :
  
  ---
  
  ou
  
  ***
  
  ---
  
  ### Exemple Complet
  
  Enfin, voici un exemple qui utilise un peu de toutÂ :
  
  - Un **lien** vers une [ressource utile](https://developer.mozilla.org/fr/).
  - Du _texte en italique_ et mÃªme ~~barrÃ©~~.
  - Une citation inspiranteÂ :
  
  > "Markdown rend la vie facile et Ã©lÃ©gante."
  
  1. Des listes ordonnÃ©es
  2. Avec des sous-listes
     - Et mÃªme des sous-sous-listes !
  
  Et voilÃ Â ! Vous Ãªtes maintenant **expert en Markdown** ! ðŸŽ‰ 
  
  ---
  
  Fin de la dÃ©monstration. Maintenant, Ã  vous de jouer ! ðŸ˜„
  `;

  const [markdown, setMarkdown] = useState(defaultMarkdown);

  // Update preview as markdown changes (meets User Story #3 and #4)
  const handleChange = (e) => {
    setMarkdown(e.target.value);
  };

  // Set options for Marked (optional: interpret line breaks as <br> elements)
  marked.setOptions({
    breaks: true,
  });

  return (
    <div className="markdown-previewer">
      <textarea
        id="editor"
        value={markdown}
        onChange={handleChange}
        placeholder="Enter Markdown here..."
      />
      <div
        id="preview"
        dangerouslySetInnerHTML={{ __html: marked(markdown) }}
      />
    </div>
  );
};

export default MarkdownPreviewer;
